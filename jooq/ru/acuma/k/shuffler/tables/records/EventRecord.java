/*
 * This file is generated by jOOQ.
 */
package ru.acuma.k.shuffler.tables.records;


import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import ru.acuma.k.shuffler.tables.Event;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventRecord extends UpdatableRecordImpl<EventRecord> implements Record6<Long, Long, JSONB, Integer, OffsetDateTime, OffsetDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.event.id</code>.
     */
    public EventRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.event.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.event.group_id</code>.
     */
    public EventRecord setGroupId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.event.group_id</code>.
     */
    public Long getGroupId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.event.members</code>.
     */
    public EventRecord setMembers(JSONB value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.event.members</code>.
     */
    public JSONB getMembers() {
        return (JSONB) get(2);
    }

    /**
     * Setter for <code>public.event.games</code>.
     */
    public EventRecord setGames(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.event.games</code>.
     */
    public Integer getGames() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.event.started_at</code>.
     */
    public EventRecord setStartedAt(OffsetDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.event.started_at</code>.
     */
    public OffsetDateTime getStartedAt() {
        return (OffsetDateTime) get(4);
    }

    /**
     * Setter for <code>public.event.finished_at</code>.
     */
    public EventRecord setFinishedAt(OffsetDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.event.finished_at</code>.
     */
    public OffsetDateTime getFinishedAt() {
        return (OffsetDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, Long, JSONB, Integer, OffsetDateTime, OffsetDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, Long, JSONB, Integer, OffsetDateTime, OffsetDateTime> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Event.EVENT.ID;
    }

    @Override
    public Field<Long> field2() {
        return Event.EVENT.GROUP_ID;
    }

    @Override
    public Field<JSONB> field3() {
        return Event.EVENT.MEMBERS;
    }

    @Override
    public Field<Integer> field4() {
        return Event.EVENT.GAMES;
    }

    @Override
    public Field<OffsetDateTime> field5() {
        return Event.EVENT.STARTED_AT;
    }

    @Override
    public Field<OffsetDateTime> field6() {
        return Event.EVENT.FINISHED_AT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getGroupId();
    }

    @Override
    public JSONB component3() {
        return getMembers();
    }

    @Override
    public Integer component4() {
        return getGames();
    }

    @Override
    public OffsetDateTime component5() {
        return getStartedAt();
    }

    @Override
    public OffsetDateTime component6() {
        return getFinishedAt();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getGroupId();
    }

    @Override
    public JSONB value3() {
        return getMembers();
    }

    @Override
    public Integer value4() {
        return getGames();
    }

    @Override
    public OffsetDateTime value5() {
        return getStartedAt();
    }

    @Override
    public OffsetDateTime value6() {
        return getFinishedAt();
    }

    @Override
    public EventRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public EventRecord value2(Long value) {
        setGroupId(value);
        return this;
    }

    @Override
    public EventRecord value3(JSONB value) {
        setMembers(value);
        return this;
    }

    @Override
    public EventRecord value4(Integer value) {
        setGames(value);
        return this;
    }

    @Override
    public EventRecord value5(OffsetDateTime value) {
        setStartedAt(value);
        return this;
    }

    @Override
    public EventRecord value6(OffsetDateTime value) {
        setFinishedAt(value);
        return this;
    }

    @Override
    public EventRecord values(Long value1, Long value2, JSONB value3, Integer value4, OffsetDateTime value5, OffsetDateTime value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EventRecord
     */
    public EventRecord() {
        super(Event.EVENT);
    }

    /**
     * Create a detached, initialised EventRecord
     */
    public EventRecord(Long id, Long groupId, JSONB members, Integer games, OffsetDateTime startedAt, OffsetDateTime finishedAt) {
        super(Event.EVENT);

        setId(id);
        setGroupId(groupId);
        setMembers(members);
        setGames(games);
        setStartedAt(startedAt);
        setFinishedAt(finishedAt);
    }

    /**
     * Create a detached, initialised EventRecord
     */
    public EventRecord(ru.acuma.k.shuffler.tables.pojos.Event value) {
        super(Event.EVENT);

        if (value != null) {
            setId(value.getId());
            setGroupId(value.getGroupId());
            setMembers(value.getMembers());
            setGames(value.getGames());
            setStartedAt(value.getStartedAt());
            setFinishedAt(value.getFinishedAt());
        }
    }
}
