/*
 * This file is generated by jOOQ.
 */
package ru.acuma.k.shuffler.tables.records;


import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import ru.acuma.k.shuffler.tables.Team;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TeamRecord extends UpdatableRecordImpl<TeamRecord> implements Record6<Long, Long, JSONB, JSONB, OffsetDateTime, OffsetDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.team.id</code>.
     */
    public TeamRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.team.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.team.game_id</code>.
     */
    public TeamRecord setGameId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.team.game_id</code>.
     */
    public Long getGameId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.team.messages</code>.
     */
    public TeamRecord setMessages(JSONB value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.team.messages</code>.
     */
    public JSONB getMessages() {
        return (JSONB) get(2);
    }

    /**
     * Setter for <code>public.team.players</code>.
     */
    public TeamRecord setPlayers(JSONB value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.team.players</code>.
     */
    public JSONB getPlayers() {
        return (JSONB) get(3);
    }

    /**
     * Setter for <code>public.team.started_at</code>.
     */
    public TeamRecord setStartedAt(OffsetDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.team.started_at</code>.
     */
    public OffsetDateTime getStartedAt() {
        return (OffsetDateTime) get(4);
    }

    /**
     * Setter for <code>public.team.finished_at</code>.
     */
    public TeamRecord setFinishedAt(OffsetDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.team.finished_at</code>.
     */
    public OffsetDateTime getFinishedAt() {
        return (OffsetDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, Long, JSONB, JSONB, OffsetDateTime, OffsetDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, Long, JSONB, JSONB, OffsetDateTime, OffsetDateTime> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Team.TEAM.ID;
    }

    @Override
    public Field<Long> field2() {
        return Team.TEAM.GAME_ID;
    }

    @Override
    public Field<JSONB> field3() {
        return Team.TEAM.MESSAGES;
    }

    @Override
    public Field<JSONB> field4() {
        return Team.TEAM.PLAYERS;
    }

    @Override
    public Field<OffsetDateTime> field5() {
        return Team.TEAM.STARTED_AT;
    }

    @Override
    public Field<OffsetDateTime> field6() {
        return Team.TEAM.FINISHED_AT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getGameId();
    }

    @Override
    public JSONB component3() {
        return getMessages();
    }

    @Override
    public JSONB component4() {
        return getPlayers();
    }

    @Override
    public OffsetDateTime component5() {
        return getStartedAt();
    }

    @Override
    public OffsetDateTime component6() {
        return getFinishedAt();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getGameId();
    }

    @Override
    public JSONB value3() {
        return getMessages();
    }

    @Override
    public JSONB value4() {
        return getPlayers();
    }

    @Override
    public OffsetDateTime value5() {
        return getStartedAt();
    }

    @Override
    public OffsetDateTime value6() {
        return getFinishedAt();
    }

    @Override
    public TeamRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public TeamRecord value2(Long value) {
        setGameId(value);
        return this;
    }

    @Override
    public TeamRecord value3(JSONB value) {
        setMessages(value);
        return this;
    }

    @Override
    public TeamRecord value4(JSONB value) {
        setPlayers(value);
        return this;
    }

    @Override
    public TeamRecord value5(OffsetDateTime value) {
        setStartedAt(value);
        return this;
    }

    @Override
    public TeamRecord value6(OffsetDateTime value) {
        setFinishedAt(value);
        return this;
    }

    @Override
    public TeamRecord values(Long value1, Long value2, JSONB value3, JSONB value4, OffsetDateTime value5, OffsetDateTime value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TeamRecord
     */
    public TeamRecord() {
        super(Team.TEAM);
    }

    /**
     * Create a detached, initialised TeamRecord
     */
    public TeamRecord(Long id, Long gameId, JSONB messages, JSONB players, OffsetDateTime startedAt, OffsetDateTime finishedAt) {
        super(Team.TEAM);

        setId(id);
        setGameId(gameId);
        setMessages(messages);
        setPlayers(players);
        setStartedAt(startedAt);
        setFinishedAt(finishedAt);
    }

    /**
     * Create a detached, initialised TeamRecord
     */
    public TeamRecord(ru.acuma.k.shuffler.tables.pojos.Team value) {
        super(Team.TEAM);

        if (value != null) {
            setId(value.getId());
            setGameId(value.getGameId());
            setMessages(value.getMessages());
            setPlayers(value.getPlayers());
            setStartedAt(value.getStartedAt());
            setFinishedAt(value.getFinishedAt());
        }
    }
}
